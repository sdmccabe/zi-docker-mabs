/*	Data Gathering Objects		Robert Axtell		The Brookings Institution		and	Middlebury College		Current version: September 2004	 */ #include <iostream>#include <math.h>#include "Data.h"/////////////////////////////////	Object Implementations...///////////////////////////////void	Data::Init()			{				N = 0;				min = 1000000.0;	//	10^6				max = 0.0;				sum = 0.0;				sum2 = 0.0;			};	//	Data::Init()void	Data::AddDatuum (double Datuum)			{				N = N + 1;				if (Datuum < min)					min = Datuum;				if (Datuum > max)					max = Datuum;				sum += Datuum;				sum2 += Datuum * Datuum;			};	//	Data::AddDatuum()int	Data::GetN()		{			return N;		};	//	Data::GetN()double	Data::GetMin()				{					return min;				};	//	Data::GetMin()double	Data::GetMax()				{					return max;				};	//	Data::GetMax()double	Data::GetDelta()				{					return max - min;				};	//	Data::GetDelta()double	Data::GetAverage()				{					if (N > 0)						return sum / N;					else						return 0.0;				};	//	Data::GetAverage()double	Data::GetVariance()				{					double avg, arg;										if (N > 1)					{						avg = GetAverage();						arg = sum2 - N * avg * avg;						return arg / (N - 1);					}					else						return 0.0;				};	//	Data::GetVariance()double	Data::GetStdDev()				{					return sqrt(GetVariance());				};	//	Data::GetStdDev()void	DataVector::Clear()			//	Initialize data objects			{			int i;			for (i = 1; i <= DataVectorSize; ++i)				data[i].Init();			};	//	CommodityData::Clear()double	DataVector::L2StdDev()				{					double sum = 0.0;					int i;										// Instead of computing the standard deviation for each commodity					//	(and thus calling sqrt() N times), sum the individual variances					//	and from this get the standard deviation					for (i = 1; i <= DataVectorSize; ++i)						sum += data[i].GetVariance();					return sqrt(sum);				};	//	CommodityData::L2StdDevdouble	DataVector::LinfStdDev()				{					double max = 0.0;					double var;					int i;										// Instead of computing the standard deviation for each commodity					//	(and thus calling sqrt() N times), find the largest variance					//	and from it get the standard deviation					for (i = 1; i <= DataVectorSize; ++i)					{						var = data[i].GetVariance();						if (var > max)							max = var;					};					return sqrt(max);				};	//	CommodityData::LinfStdDev